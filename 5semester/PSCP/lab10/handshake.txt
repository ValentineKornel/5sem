Этапы Handshake
Инициализация соединения клиентом (HTTP-запрос)
Клиент отправляет HTTP-запрос с особыми заголовками для запроса перехода на WebSocket-протокол. Этот запрос выглядит следующим образом:

Пример HTTP-запроса клиента
http
Copy code
GET /wsserver HTTP/1.1
Host: localhost:4000
Upgrade: websocket
Connection: Upgrade
Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==
Sec-WebSocket-Version: 13
Разбор ключевых заголовков:

Upgrade: websocket: Указывает, что клиент хочет переключиться на WebSocket-протокол.
Connection: Upgrade: Требует, чтобы соединение было обновлено.
Sec-WebSocket-Key: Базовый64 (Base64) закодированная строка, используемая для проверки сервера.
Sec-WebSocket-Version: Версия протокола WebSocket, поддерживаемая клиентом (текущая версия — 13).
Ответ сервера (HTTP 101 Switching Protocols)
Если сервер поддерживает WebSocket-протокол и готов установить соединение, он отвечает клиенту следующим образом:

Пример HTTP-ответа сервера
http
Copy code
HTTP/1.1 101 Switching Protocols
Upgrade: websocket
Connection: Upgrade
Sec-WebSocket-Accept: s3pPLMBiTxaQ9kYGzzhZRbK+xOo=
Разбор ключевых заголовков:

101 Switching Protocols: HTTP-код, указывающий, что соединение переключается на другой протокол.
Upgrade: websocket: Подтверждает переход на WebSocket-протокол.
Connection: Upgrade: Повторяет требование об обновлении соединения.
Sec-WebSocket-Accept: Строка, основанная на значении из заголовка Sec-WebSocket-Key, обработанном сервером.






20. Разница между полудуплексным и дуплексным каналами данными
Полудуплексный канал: это канал, в котором данные могут передаваться только в одном направлении в любой момент времени. 
То есть, либо один узел отправляет данные, а другой их принимает, либо наоборот, но не одновременно. 
Пример: радио (трансляция звука только в одном направлении).

Дуплексный канал: это канал, в котором данные могут передаваться в обоих направлениях одновременно. Оба узла могут как 
отправлять, так и получать данные одновременно. Пример: телефонная линия, где оба собеседника могут говорить и слушать одновременно.

21. Какой тип канала применяется HTTP-протоколом
HTTP-протокол использует полудуплексный канал. В классическом HTTP-соединении клиент отправляет запрос, а сервер отвечает, 
но эти действия происходят поочередно — клиент не может отправлять запросы в то время, когда сервер отправляет ответ.

Однако, в случае с HTTP/2 и HTTP/3 применяется более сложная модель, которая позволяет более эффективно использовать 
соединение, поддерживая мультиплексирование потоков, но это всё равно основывается на принципах полудуплексности для отдельных запросов/ответов.

22. Поясните понятие WebSocket
WebSocket — это протокол для обмена данными, который позволяет создавать устойчивое двустороннее соединение между клиентом и 
сервером. В отличие от HTTP, WebSocket позволяет передавать данные в обоих направлениях (в реальном времени) без 
необходимости постоянно устанавливать новое соединение. Это идеальный выбор для приложений, требующих постоянного 
обмена данными, таких как чаты, игры, биржи и прочее.

Процесс установления WebSocket-соединения начинается с HTTP-запроса для "рукопожатия" (handshake), после чего соединение 
переходит в состояние WebSocket, где оба конца могут обмениваться данными в любой момент времени.

23. Какой тип канала применяется WebSocket-протоколом
WebSocket использует дуплексный канал. После установления соединения WebSocket оба конца (клиент и сервер) могут отправлять и 
получать данные одновременно и в любой момент времени. Это делает WebSocket идеальным для приложений, где важно мгновенно 
передавать данные в обе стороны (например, чат, уведомления и т.д.).

24. Поясните понятия «широковещательное сообщение» (broadcast), «широковещательный сервер»
Широковещательное сообщение (broadcast): это тип сообщения, которое отправляется всем участникам в сети или всем подключённым 
клиентам. В отличие от однонаправленных сообщений, которые отправляются конкретному получателю, широковещательные сообщения 
доставляются всем возможным получателям одновременно. Пример: сообщения, рассылаемые всем пользователям чата или всем компьютерам в сети.

Широковещательный сервер: это сервер, который отправляет одно и то же сообщение или данные множеству получателей (клиентов) 
одновременно. Пример: WebSocket сервер, который отправляет уведомления всем подключённым клиентам о каком-либо событии. 
В контексте WebSocket это может быть сервер, отправляющий сообщения всем подключенным пользователям одновременно, как в случае с 
чатами или с уведомлениями о событиях.